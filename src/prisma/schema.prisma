generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url       = "postgres://kteizvyaksjvkf:e662f0cfc7c5698fa318afdfb4684481ac4da106ff465155cbb955166090737c@ec2-34-254-120-2.eu-west-1.compute.amazonaws.com:5432/ddi2kr8l1htuc4"
}

model Board {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  description String?
  path        String   @unique
}

model Fish {
  id            Int    @id @default(autoincrement())
  imguri        String
  description   String
  name          String @unique
  fishingtrip   Fishingtrip[]
}

model Location {
  id   Int    @id @default(autoincrement())
  name String @unique
  fishingtrip Fishingtrip[]
}

model Harbour {
  id          Int    @id @default(autoincrement())
  name        String @unique
  latitude    Float
  longitude   Float
  fishingtrip Fishingtrip[]
}

model Treatedby {
  id          Int    @id @default(autoincrement())
  name        String @unique
  description String
  logouri     String
  homepage    String
  imguri      String
  fishingtrip         Fishingtrip[]

}

model Boat {
  id                  Int               @id @default(autoincrement())
  name                String            @unique
  imguri              String
  freeze_trawler      Boolean
  fishingtrip         Fishingtrip[]
  fishingequipmentId  Int               
  fishingequipment    Fishingequipment  @relation (fields:[fishingequipmentId], references: [id])
}

model Fishingtrip {
  id          Int           @id @default(autoincrement())
  startDate   String
  endDate     String
  fishId      Int       
  fish        Fish          @relation (fields:[fishId], references: [id])
  boatId      Int       
  boat        Boat          @relation  (fields:[boatId], references: [id])
  harbourId   Int       
  harbour     Harbour       @relation (fields:[harbourId], references: [id])
  locationId  Int       
  location    Location      @relation (fields:[locationId], references: [id])
  treatedbyid Int
  treatedby   Treatedby      @relation (fields:[treatedbyid], references: [id])
  traceability Traceability[]
  
}

model Traceability {
  id Int @id @default(autoincrement())
  fishingtripId Int 
  fishingtrip Fishingtrip @relation (fields:[fishingtripId],references: [id])

}

model Fishingequipment {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  boat  Boat[]

}
